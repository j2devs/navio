services:
  backend:
    profiles: ["dev"]
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: backend-runtime
    image: navio-backend:latest
    ports:
      - "8080:8080"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB:-navio_db}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${POSTGRES_DB:-navio_db}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=${SPRING_RABBITMQ_PORT:-5672}
      - SPRING_RABBITMQ_USERNAME=${SPRING_RABBITMQ_USERNAME:-guest}
      - SPRING_RABBITMQ_PASSWORD=${SPRING_RABBITMQ_PASSWORD:-guest}
    container_name: backend-dev
    networks:
      - navio-network
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    profiles: ["dev"]
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: frontend-nginx
      args:
        - VITE_MAPBOX_ACCESS_KEY=${VITE_MAPBOX_ACCESS_KEY}
    image: navio-frontend:latest
    ports:
      - "80:80"
    environment:
      - VITE_MAPBOX_ACCESS_KEY=${VITE_MAPBOX_ACCESS_KEY}
      - VITE_API_URL=${VITE_API_URL:-http://localhost:8080}
    container_name: frontend-dev
    networks:
      - navio-network
    depends_on:
      - backend
    restart: unless-stopped

  db:
    profiles: ["dev"]
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB:-navio_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    container_name: navio-db-dev
    networks:
      - navio-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    profiles: ["dev"]
    image: rabbitmq:3.13-management-alpine
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=${SPRING_RABBITMQ_USERNAME:-guest}
      - RABBITMQ_DEFAULT_PASS=${SPRING_RABBITMQ_PASSWORD:-guest}
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    volumes:
      - rabbitmq_data_dev:/var/lib/rabbitmq
    container_name: navio-rabbitmq-dev
    networks:
      - navio-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data_dev:
    name: navio_postgres_data_dev
  rabbitmq_data_dev:
    name: navio_rabbitmq_data_dev

networks:
  navio-network:
    name: navio-dev-network
    driver: bridge